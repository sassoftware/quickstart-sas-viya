---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'This template deploys a SAS Viya stack into a new VPC.
  **WARNING** This template creates EC2 instances and related resources. You
  will be billed for the AWS resources used if you create a stack from this
  template. License: Apache 2.0 (Please do not remove) Apr,19,2018 (qs-1ocb9ttq7)'
# The Metadata tells AWS how to display the parameters during stack creation
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: SAS Viya License and Install Package
      Parameters:
        - DeploymentDataLocation
    - Label:
        default: Administration
      Parameters:
        - KeyPairName
        - AvailabilityZone
        - WebIngressLocation
        - AdminIngressLocation
        - SASAdminPass
        - SASUserPass
        - CASInstanceSize
        - ServicesInstanceSize
        - DeploymentMirror
        - OperatorEmail
    - Label:
        default: Server DNS configuration (only required for custom DNS name and SSL)
      Parameters:
        - DomainName
        - AWSHostedZoneID
        - SSLCertificateARN
    - Label:
        default: AWS Quick Start Configuration
      Parameters:
        - QSS3BucketName
        - QSS3KeyPrefix
    ParameterLabels:
      AvailabilityZone:
        default: VPC Availability Zone
      KeyPairName:
        default: Key Name
      QSS3BucketName:
        default: Quick Start S3 Bucket Name
      QSS3KeyPrefix:
        default: Quick Start S3 Key Prefix
      DeploymentDataLocation:
        default: SAS Viya Software Order File
      CASInstanceSize:
        default: EC2 Instance Type for the CAS compute VM
      ServicesInstanceSize:
        default: EC2 Instance Size for the Viya Services VM
      DeploymentMirror:
        default: Mirror of SAS Viya Deployment Data
      AdminIngressLocation:
        default: Permitted IP Range for Deployment Admin
      WebIngressLocation:
        default: Permitted IP Range for Application Access
      SASAdminPass:
        default: SAS Administrator Password
      SASUserPass:
        default: Password for Default User
      OperatorEmail:
        default: Operator Email
      SSLCertificateARN:
        default: SSL Certificate
      DomainName:
        default: Domain Name
      AWSHostedZoneID:
        default: Route 53 Hosted Zone

# The Parameters allow the user to pass custom settings to the stack before creation
Parameters:

  DeploymentDataLocation:
    AllowedPattern: >-
      ^([-a-zA-Z0-9@:%_\+.~#?&//=]*)\.zip$
    Description: >-
      S3 location of the Software Order Confirmation e-mail attachment.
      Example: mysasbucket/viya_deployment_data/SAS_Viya_deployment_data.zip
    Type: String
    MinLength: '1'
    ConstraintDescription: must be a zip file in a valid S3 bucket location, e.g. mysasbucket/viya_deployment_data/SAS_Viya_deployment_data.zip

  CASInstanceSize:
    AllowedValues:
      - "i3.large"
      - "i3.xlarge"
      - "i3.2xlarge"
      - "i3.4xlarge"
      - "i3.8xlarge"
      - "i3.16xlarge"
      - "i3.metal"
      - "r5.large"
      - "r5.xlarge"
      - "r5.2xlarge"
      - "r5.4xlarge"
      - "r5.12xlarge"
      - "r5.24xlarge"
      - "r5.metal"
      - "r5a.large"
      - "r5a.xlarge"
      - "r5a.2xlarge"
      - "r5a.4xlarge"
      - "r5a.12xlarge"
      - "r5a.24xlarge"
# These SKUs are not available because they mix and match nvme disks and we are not yet able to support that
#      - "r5ad.large"
#      - "r5ad.xlarge"
#      - "r5ad.2xlarge"
#      - "r5ad.4xlarge"
#      - "r5ad.12xlarge"
#      - "r5ad.24xlarge"
#      - "r5d.large"
#      - "r5d.xlarge"
#      - "r5d.2xlarge"
#      - "r5d.4xlarge"
#      - "r5d.12xlarge"
#      - "r5d.24xlarge"
#      - "r5d.metal"
    ConstraintDescription: Must contain either "i3" or "r5"
    Default: "i3.4xlarge"
    Description: Type and size of EC2 instance for the Viya Compute Node (choose i3 for performance or r5 for auto-recovery)
    Type: String

  ServicesInstanceSize:
    AllowedValues:
      - "r5.2xlarge"
      - "r5.4xlarge"
      - "r5.12xlarge"
      - "r5.24xlarge"
      - "r4.2xlarge"
      - "r4.4xlarge"
      - "r4.8xlarge"
    ConstraintDescription: Must be one of the allowed r4 or r5 sizes
    Default: "r5.4xlarge"
    Description: Determines the type and size of the EC2 VM instance used for the Viya Services
    Type: String

  KeyPairName:
    Description: >-
      Name of an existing EC2 key pair. This will allow you to access the Ansible Controller after it launches.
    Type: AWS::EC2::KeyPair::KeyName
    MinLength: '1'
    ConstraintDescription: must be the name of an existing AWS Key Pair in the current AWS region

  AvailabilityZone:
    Description: The Availability Zone for the public and private subnet.
    Type: AWS::EC2::AvailabilityZone::Name
    MinLength: '10'
    ConstraintDescription: must be the name of an AWS Availability Zone in the current AWS region

  WebIngressLocation:
    Description: >-
      Allow inbound HTTP traffic to the SAS Viya Environment from this CIDR block (IP address range). Must be a valid IP CIDR range of the form x.x.x.x/x.
    Type: String
    MinLength: '9'
    MaxLength: '18'
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

  AdminIngressLocation:
    Description: >-
      Allow inbound SSH traffic to the Ansible Controller from this CIDR block (IP address range). Must be a valid IP CIDR range of the form x.x.x.x/x.
    Type: String
    MinLength: '9'
    MaxLength: '18'
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

  DeploymentMirror:
    Description: >-
      (Optional) Location of SAS Viya Deployment Repository Mirror
    Default: ''
    Type: String
    ConstraintDescription: must be valid http(s) or s3 location of mirror repository (e.g. https://my-repository-vm or s3://my-bucket/my-path)
    AllowedPattern: (?i)^(^$|s3:\/\/|(http|https):\/\/).*

  SASAdminPass:
    Description: >-
      Password of the SAS Admin Users (sasboot, optionally sasadmin). Must have at least 6 and no more than 255 characters.
    Type: String
    MinLength: '6'
    MaxLength: '255'
    AllowedPattern: ^([^']*)$
    NoEcho: true
    ConstraintDescription: Password must have at least 6 and no more than 255 characters and cannot contain single quotes.
  SASUserPass:
    Description: >-
      Password of the default SAS User (sasuser). If left empty, no default users are being created (WARNING: If not set, deployment will require additional setup steps before being usable).
    Type: String
    MaxLength: '255'
    NoEcho: true
    AllowedPattern: ^([^']*)$
    ConstraintDescription: Password cannot be longer than 255 characters and cannot contain single quotes.

  QSS3BucketName:
    AllowedPattern: '^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$'
    ConstraintDescription: >-
      Quick Start bucket name can include numbers, lowercase letters, uppercase
      letters, and hyphens (-). It cannot start or end with a hyphen (-).
    Default: aws-quickstart
    Description: >-
      S3 bucket name for the Quick Start assets.
      Only change this value if you customize or extend the Quick Start for your own use.
      This string can include numbers, lowercase letters, uppercase letters, and hyphens (-).
      It cannot start or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: '^[0-9a-zA-Z-/]*[/]$'
    ConstraintDescription: >-
      Quick Start key prefix can include numbers, lowercase letters, uppercase
      letters, hyphens (-), and forward slash (/) and must terminate in a forward slash.
    Default: quickstart-sas-viya/
    Description: >-
      S3 key prefix for the Quick Start assets.
      Only change this value if you customize or extend the Quick Start for your own use.
      Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-),
      and forward slash (/) and must terminate in a forward slash.
    Type: String

  OperatorEmail:
    AllowedPattern: "([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)|^$"
    ConstraintDescription: "must be a valid email address."
    Description: "(Optional) Email address to send a notification about deployment success or failure."
    Type: String
    Default: ''

  SSLCertificateARN:
    Description: >-
      The AWS CertificateManager Amazon Resource Name (ARN) for the SSL certificate to use to enable HTTPS. The certificate needs to match the DomainName.
      Syntax: arn:aws:acm:region:account-id:certificate/certificate-id
      Example: arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012
    Type: String
    Default: ''
  DomainName:
    Description: The SAS Viya Server portal will be reachable at this DNS name (blank = generated ELB name will be used as application DNS name)
    Type: String
    Default: ''
  AWSHostedZoneID:
    Description: Existing DNS Zone ID for the DomainName (blank = generated ELB name will be used as application DNS name)
    Type: String
    Default: ''

Conditions:
  UsEast1Condition:
    Fn::Equals:
    - !Ref AWS::Region
    - "us-east-1"

Resources:
  # Resources for new VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: '10.0.0.0/16'
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
      - Key: Name
        Value: !Ref AWS::StackName

  DHCPOptions:
    Type: AWS::EC2::DHCPOptions
    Properties:
      DomainName:
        # us-east-1 needs .ec2.internal, the rest of the regions get <region>.compute.internal.
        # See http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html
        Fn::If:
        - UsEast1Condition
        - "ec2.internal"
        - !Sub "${AWS::Region}.compute.internal"
      DomainNameServers:
      - AmazonProvidedDNS

  VPCDHCPOptionsAssociation:
    Type: AWS::EC2::VPCDHCPOptionsAssociation
    Properties:
      VpcId: !Ref VPC
      DhcpOptionsId: !Ref DHCPOptions

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Network
        Value: Public

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: '10.0.0.0/19'
      AvailabilityZone: !Ref AvailabilityZone
      Tags:
      - Key: Name
        Value: Private subnet
      - Key: Network
        Value: Private

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: '10.0.128.0/20'
      AvailabilityZone: !Ref AvailabilityZone
      Tags:
      - Key: Name
        Value: Public subnet
      - Key: Network
        Value: Public
      - Key: SASViyaStack
        Value: !Ref AWS::StackName
      MapPublicIpOnLaunch: true

  # The NAT IP for the private subnet, as seen from within the public one
  NATEIP:
    DependsOn: VPCGatewayAttachment
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  # The NAT gateway for the private subnet
  NATGateway:
    DependsOn: VPCGatewayAttachment
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NATEIP.AllocationId
      SubnetId: !Ref PublicSubnet

  PrivateSubnetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: Private subnets
      - Key: Network
        Value: Private

  PrivateSubnetRoute:
    DependsOn: VPCGatewayAttachment
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateSubnetRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway

  PrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet
      RouteTableId: !Ref PrivateSubnetRouteTable

  PublicSubnetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: Public Subnets
      - Key: Network
        Value: Public

  PublicSubnetRoute:
    DependsOn: VPCGatewayAttachment
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicSubnetRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicSubnetRouteTable


  # Call the viya template and supply its parameters
  # This creates a second stack that creates the actual application cluster
  # within the new VPC
  SASViyaStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/sas-viya.template.yaml"
      Parameters:
        KeyPairName: !Ref KeyPairName
        PrivateSubnetID: !Ref PrivateSubnet
        PublicSubnetID: !Ref PublicSubnet
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        DeploymentDataLocation: !Ref DeploymentDataLocation
        VPCID: !Ref VPC
        AdminIngressLocation: !Ref AdminIngressLocation
        WebIngressLocation: !Ref WebIngressLocation
        SASAdminPass: !Ref SASAdminPass
        SASUserPass: !Ref SASUserPass
        OperatorEmail: !Ref OperatorEmail
        SSLCertificateARN: !Ref SSLCertificateARN
        DomainName: !Ref DomainName
        AWSHostedZoneID: !Ref AWSHostedZoneID
        CASInstanceSize: !Ref CASInstanceSize
        ServicesInstanceSize: !Ref ServicesInstanceSize
        DeploymentMirror: !Ref DeploymentMirror
Outputs:
  # Outputs from VPC creation
  VPCID:
    Description: ID of the newly-created EC2 VPC.
    Value: !Ref VPC


